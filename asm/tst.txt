
def main(){
init{
  r4 = 999978;
  r3 = 999978;
  r9 = 32;

  r10 = 185;
  r1 = 4;

  r8 = 244;

  r11 = 999977;
  r2 = 1024;

  r15 = 16;
}

var{
	tst;
}

//	[r4] = r8+z;
begin:
//	r2 = [r3]+z;
//	[r4] = r2+z;
	
//	ip = [ip]+z;
//	begin;
	
//	[r11] = r8 + z;

//	[r4] = r8 + z;

//	[r4] = [ip++] + z;
//	999977;

//	r2 = z + [r3];

	[r4] = r10 + z; // uart out "b9"

loop:
        r2 = [r4] + z; // uart in
        [r4] = r2 + z; // uart out (echo)

	r7 = r2 >> r1; // calculate of chanel (1, 2 or 3) 
	[r4] = r7 + z; // uart out of chanel

	r5 = r4 - r7; // calculate addr of chanel
//	[r4] = r7 + z;

	[r5] = r2 & [ip++]; // out of masked data
	15;

	[r4] = [r5] + z;

        ip = z + [ip]; // goto "loop" label
        loop;


        ip = z + [ip]; // goto "begin" label
        loop;




        r1 = [ip++] + z;
        5;
        [r3] = r1 + z;
        z = z + r1++;
        ip = z + [ip];
        loop;

//	1024;
//	[r3] = r3 + r3;
//	r3 = [r3] + z;
	[r3] = [r3] + [r3];


//	r11 = [ip++] + z;
//	trd1;
	
	r10 = r11 + [ip++];
	17;
	
	[r10] = [ip++] + z;
	16;
	
	r1 = fork[ip++](r11);
	intr;
	
	r1 = z + [ip++];
	intr;
	r1 = r1 + [ip++];
	17;
	
	r1 = z - [r1];
	
	r8 = [ip++] + Z ;
	2;
l1:
	z = z + r8-- ;
	ip = [ip++] + z ? r8 ;
	l1 ;
	
	r1 = [r7] + [r8];
	
	r2 = r1 + r1;
	r3 = r1 - r1;
	
	[r7++]  =  ip++    + [ip++] ;
	l1;
l2:
	tst;
	
	def internal(){
		r3 <- r2++ <- [r1++] ;
	}

	r3 <- r2 <- r1;
	
	def intr(){
		r0 = stop z (z);
	l1:
		r1 = z + [ip];
		ip = [ip++] + z;
		l1;
	}
}

entry: main.
