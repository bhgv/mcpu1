
def main(){
init{
  r1 = 8;
  r2 = 1;
  r15 = 16;
  r7 = 15;
}

var{
	tst;
}
//loop:

        r3  = z + [ip++];
//        999978; //999998; //1000000;
        999979; //8; //999998; //1000000;

loop:
//	r2 = [ip++] +z;
 //       49;
//        [r3] = r2 + z;
//	r2 = [ip++] +z;
//        50;
//        [r3] = r2 + z;

//	r2 = [ip++] +z;
//        10;
//        [r3] = r2 + z;
//	r2 = [ip++] +z;
//        13;
//        [r3] = r2 + z;

        r2 = [r3--] + z;
        [r3++] = r2 + z;

        ip = z + [ip];
        loop;

        r1 = [ip++] + z;
        5;
        [r3] = r1 + z;
        z = z + r1++;
        ip = z + [ip];
        loop;

//	1024;
//	[r3] = r3 + r3;
//	r3 = [r3] + z;
	[r3] = [r3] + [r3];


//	r11 = [ip++] + z;
//	trd1;
	
	r10 = r11 + [ip++];
	17;
	
	[r10] = [ip++] + z;
	16;
	
	r1 = fork[ip++](r11);
	intr;
	
	r1 = z + [ip++];
	intr;
	r1 = r1 + [ip++];
	17;
	
	r1 = z - [r1];
	
	r8 = [ip++] + Z ;
	2;
l1:
	z = z + r8-- ;
	ip = [ip++] + z ? r8 ;
	l1 ;
	
	r1 = [r7] + [r8];
	
	r2 = r1 + r1;
	r3 = r1 - r1;
	
	[r7++]  =  ip++    + [ip++] ;
	l1;
l2:
	tst;
	
	def internal(){
		r3 <- r2++ <- [r1++] ;
	}

	r3 <- r2 <- r1;
	
	def intr(){
		r0 = stop z (z);
	l1:
		r1 = z + [ip];
		ip = [ip++] + z;
		l1;
	}
}

entry: main.
